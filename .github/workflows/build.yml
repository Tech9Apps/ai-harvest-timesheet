name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release'
        type: boolean
        default: false
        required: true

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build:
    runs-on: macos-latest

    defaults:
      run:
        working-directory: ai-harvest-timesheet

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
          cache: 'npm'
          cache-dependency-path: ai-harvest-timesheet/package-lock.json

      - name: Install dependencies
        run: npm install
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Delete existing release assets
        uses: andreaswilli/delete-release-assets-action@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', github.run_number) }}
          deleteOnlyFromDrafts: false

      # Build and release executables
      - name: Build and release
        run: npm run build:mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          DEBUG: electron-builder

      # Debug build output
      - name: Debug build output
        run: |
          echo "Current directory:"
          pwd
          echo "\nDirectory structure:"
          ls -R
          echo "\nRelease directory structure:"
          find . -name "release" -type d -exec ls -R {} \;
          echo "\nSearching for DMG files:"
          find . -name "*.dmg"
          echo "\nSearching for ZIP files:"
          find . -name "*.zip"

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            ai-harvest-timesheet/release/*.dmg
            ai-harvest-timesheet/release/*.zip
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: release

      - name: List files
        run: |
          pwd
          echo "Current directory contents:"
          ls -la
          echo "\nRelease directory structure:"
          ls -R release/
          echo "\nFound release files:"
          find . -type f -name "*.dmg" -o -name "*.zip"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.dmg
            release/*.zip
          draft: true
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', github.run_number) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
